# Generated by Django 4.2.4 on 2023-09-07 18:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Doctors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('professional_details', models.CharField(max_length=1000)),
                ('practicing_from', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'doctors',
            },
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Testappointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('centerid', models.CharField(max_length=500)),
                ('appointment_date', models.DateField()),
                ('status', models.CharField(max_length=100)),
                ('test_name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=500)),
                ('patient_name', models.CharField(max_length=255)),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Qualifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification_name', models.CharField(max_length=255)),
                ('institute_name', models.CharField(max_length=255)),
                ('procurement_year', models.TimeField()),
                ('docid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mediline.doctors')),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255)),
                ('doc_name', models.CharField(max_length=255)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('details', models.CharField(max_length=255)),
                ('pdf', models.FileField(upload_to='store/pdfs/')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Doc_specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('docid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mediline.doctors')),
                ('specialization_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mediline.specialization')),
            ],
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(max_length=500)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('zip', models.CharField(max_length=100)),
                ('docid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mediline.doctors')),
            ],
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.CharField(max_length=100)),
                ('morning_slot', models.CharField(blank=True, max_length=100, null=True)),
                ('evening_slot', models.CharField(blank=True, max_length=100, null=True)),
                ('is_available', models.BooleanField()),
                ('clinicid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mediline.clinic')),
                ('docid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mediline.doctors')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_start_date', models.DateField(auto_now_add=True)),
                ('appointment_status', models.CharField(max_length=255)),
                ('appointment_date', models.DateField()),
                ('time_slot', models.CharField(max_length=255)),
                ('clinicid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mediline.clinic')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
